---
title: "Main report"
output: html_document
---


```{r}
#| label: load-packages-and-vars
#| echo: false

# Load packages
library(knitr)
library(ggplot2)
library(yaml)

# Read plot vars from YAML file
# Data structure: params (metadata via execute_params) + vars 
if (file.exists("report_vars_app26.yaml")) {
  yaml_data <- yaml::read_yaml("report_vars_app26.yaml")
  vars <- yaml_data$vars  # Plot variables
  # Note: metadata (title, subtitle, name) comes via execute_params, not from YAML
} else {
  stop("report_vars_app26.yaml was not created")
}

# Set up colors
color_bg <- "#FFFFFF"
color_plot_background <- "#FFFFFF"
color_fg <- "#0B1C72"
color_primary <- "#D62727"
color_success <- "#8A9C40"
color_warning <- "#FFA500"
color_plotA_point <- color_primary
color_plotA_line <- color_warning
color_plotB_point <- color_success
color_plotB_line <- color_warning
```

```{r}
#| label: load-and-preproc-vars
#| include: false

# Get all Plot A parameters that are not NULL
plotA_x_params <- vars[grepl("^plotA_x_", names(vars))]
plotA_x_params <- plotA_x_params[!sapply(plotA_x_params, is.null)]
plotA_subcap_params <- vars[grepl("^plotA_SubCaption_", names(vars))]
plotA_subcap_params <- plotA_subcap_params[!sapply(plotA_subcap_params, is.null)]
```


## Scatter Plots with Regression Lines
### Plot A Visualizations


```{r}
#| label: set-knitr-chunk-params-plotA
#| echo: false


# Set Subcaption  
if (all(sapply(plotA_subcap_params, function(x) x == "")) && vars$plotA_n > 1){
  # set default captions if there are multiple 'A' plots but no subcaptions were provided
  subcaption <- sapply(plotA_x_params, function(x) paste0("Var: ", x))
} else {
  # if captions provided, assign captions 
  subcaption <- plotA_subcap_params
}

if(vars$plotA_n > 1){
  fig.cap = vars$plotA_caption_shared
  layout.ncol = 2
  fig.subcap = subcaption
} else {
  fig.cap = vars$plotA_caption_shared
  layout.ncol = NULL
  fig.subcap = NULL
}

my_global_variable <- "Hello from the global environment"

```

```{r}
#| echo: false

library(patchwork)
tempfiles <- c()
for (i in 1:length(plotA_x_params)){
letter <- LETTERS[i]

rmd_content <- glue::glue("
\```{r}
#| label: fig-plot<<letter>>
#| fig-height: 4
#| fig-width: 5
#| echo: false

cat(my_global_variable)

plots <- list()
if (length(plotA_x_params) > 0) {
  for (i in 1:3) { # changed from 1:length(plotA_x_params)
    x_var <- plotA_x_params[[1]]
    
    plots[[i]] <- ggplot(mtcars, aes(x = .data[[x_var]], y = mpg)) +
      geom_point(color = color_plotA_point, size = 3) +
      geom_smooth(method = 'lm', se = FALSE, color = color_plotA_line) +
      theme_minimal() +
      labs(title = paste('Plot A', i), x = x_var, y = 'mpg') +
      theme(
        plot.background = element_rect(fill = color_plot_background, color = NA),
        panel.background = element_rect(fill = color_plot_background, color = NA),
        text = element_text(color = color_fg),
        axis.text = element_text(color = color_fg),
        axis.title = element_text(color = color_fg),
        plot.title = element_text(face = 'bold')
      )
    
    
  }
}
(plots[[1]] + plots[[2]]) / plots[[3]]
\```

See @fig-plot<<letter>>. 
", .open = "<<", .close = ">>")

# Create a temporary file with .Rmd extension
temp_file <- tempfile(paste0("file_", i), fileext = ".qmd")
tempfiles <- c(tempfiles, temp_file)

# Write the content to the temporary file
writeLines(rmd_content, temp_file)
}
```


```{r, results='asis'}
#| echo: false
#child_files <- c('gen-child-one.Rmd', 'child-two.Rmd')
for (file in tempfiles) {
  cat(knitr::knit_child(file, quiet = TRUE), sep = '\n')
}
```

```{r}
tempfiles
```
# Conclusion