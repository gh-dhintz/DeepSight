---
title: "Testing Plotly Orca Export"
format: pdf
---

## Testing Plotly Orca

```{r}
#| label: create-plot
#| echo: true

# Create a very simple plotly scatter plot
p <- plot_ly(
  x = c(1, 2, 3, 4, 5),
  y = c(2, 4, 3, 5, 6),
  type = 'scatter',
  mode = 'lines+markers',
  name = 'Test Data'
) %>%
  layout(
    title = "Simple Test Plot",
    xaxis = list(title = "X Axis"),
    yaxis = list(title = "Y Axis")
  )

# Display the plot
p
```


```{r}
#| label: test-orca
#| echo: true

# Check if orca is available
orca_available <- tryCatch({
  plotly::orca_serve()
  TRUE
}, error = function(e) {
  cat("Orca is not available. Error message:\n")
  cat(e$message, "\n")
  FALSE
})

if (orca_available) {
  cat("✓ Orca appears to be installed and accessible\n")
} else {
  cat("✗ Orca is not available\n")
  cat("\nTo install orca, you can try:\n")
  cat("1. plotly::orca_serve()\n")
  cat("2. Or download from: https://github.com/plotly/orca/releases\n")
}
```


```{r}
#| label: test-export
#| echo: true

# Try the deprecated export function
export_success <- tryCatch({
  plotly::export(p, file = "test_export.png")
  cat("✓ Export function succeeded\n")
  TRUE
}, error = function(e) {
  cat("✗ Export function failed. Error:\n")
  cat(e$message, "\n")
  FALSE
})
```


```{r}
#| label: check-files
#| echo: true

# Check if files were created
files_to_check <- c("test_export.png", "test_orca.png")

for (file in files_to_check) {
  if (file.exists(file)) {
    cat(sprintf("✓ %s was created successfully (size: %d bytes)\n", 
                file, file.info(file)$size))
  } else {
    cat(sprintf("✗ %s was not created\n", file))
  }
}
```


```{r}
#| label: test-kaleido
#| echo: true



library(reticulate)
reticulate::install_miniconda()
reticulate::conda_install('r-reticulate', 'python-kaleido')
reticulate::conda_install('r-reticulate', 'plotly', channel = 'plotly')
reticulate::use_miniconda('r-reticulate')


# Check if kaleido is installed (alternative to orca)
  # Try kaleido export
  kaleido_success <- tryCatch({
    kaleido::kaleido(p, file = "test_kaleido.png", width = 600, height = 400)
    cat("✓ Kaleido export succeeded\n")
    TRUE
  }, error = function(e) {
    cat("✗ Kaleido export failed. Error:\n")
    cat(e$message, "\n")
    FALSE
  })

```


```{r}
#| label: system-info
#| echo: true

# Print system information for debugging
cat("\nSystem Information:\n")
cat("R version:", R.version.string, "\n")
cat("Operating System:", Sys.info()["sysname"], "\n")
cat("plotly version:", packageVersion("plotly"), "\n")
```